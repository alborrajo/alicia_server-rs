use std::borrow::Cow;
use std::io::{Cursor, Read, Seek, Write};
use std::vec;

use deku::ctx::ReadExact;
use deku::prelude::*;
use tokio::io::AsyncReadExt;
use tokio::net::TcpStream;

// A constant buffer size for message magic.
// The maximum size of message payload is 4092 bytes.
// The extra 4 bytes are reserved for message magic.
pub const MAGIC_SIZE: usize = size_of::<u32>();
pub const MAX_PAYLOAD_SIZE: usize = 4092;
pub const MAX_BUFFER_SIZE: usize = MAGIC_SIZE + MAX_PAYLOAD_SIZE;

// A constant buffer jumbo for message magic.
const BUFFER_JUMBO: u16 = 16384;

// XOR scrambling constants.
const XOR_MULTIPLIER: u32 = 0xdff7f7db;
const XOR_CONTROL: u32 = 0xa20191cb;

#[derive(Debug)]
pub struct PacketScrambler {
    pub xor_key: u32,
}
impl PacketScrambler {
    pub fn roll_key(&mut self) {
        self.xor_key = self
            .xor_key
            .wrapping_mul(XOR_MULTIPLIER)
            .wrapping_add(XOR_CONTROL);
    }

    pub fn scramble(&mut self, packet: &mut Packet) {
        self.roll_key();
        for idx in 0..packet.payload.len() {
            let shift = idx % 4;
            packet.payload[idx] ^= self.xor_key.to_le_bytes()[shift];
        }
    }
}

#[derive(Debug)]
pub struct Packet {
    pub command_id: CommandId,
    pub payload: Vec<u8>,
}
impl Packet {
    pub async fn from_stream(buf: &mut [u8], stream: &mut TcpStream) -> Result<Packet, String> {
        let result = stream.read_exact(&mut buf[0..MAGIC_SIZE]).await;
        if result.is_err() || result.is_ok_and(|n| n == 0) {
            return Err("Failed to read command magic from stream".into());
        }
        let mut cursor = Cursor::new(buf);
        let mut reader = Reader::new(&mut cursor);
        let magic = u32::from_reader_with_ctx(&mut reader, ())
            .map_err(|e| format!("Failed to read command magic from buffer: {:?}", e))?;
        let (command_id, length) =
            decode_magic(magic).map_err(|e| format!("Invalid command magic: {}", e))?;
        if length == MAGIC_SIZE as u16 {
            Ok(Packet {
                command_id,
                payload: vec![],
            })
        } else {
            let mut payload = vec![0u8; length as usize - MAGIC_SIZE];
            let result = stream.read_exact(&mut payload).await;
            if result.is_err() || result.is_ok_and(|n| n == 0) {
                return Err("Failed to read command payload".into());
            }
            Ok(Packet {
                command_id,
                payload,
            })
        }
    }
}
impl DekuWriter<()> for Packet {
    fn to_writer<W: Write + Seek>(&self, writer: &mut Writer<W>, ctx: ()) -> Result<(), DekuError> {
        encode_magic(self.command_id, (MAGIC_SIZE + self.payload.len()) as u16)
            .to_writer(writer, ctx)?;
        self.payload.to_writer(writer, ctx)
    }
}
impl<'a> DekuReader<'a, ()> for Packet {
    fn from_reader_with_ctx<R: Read + Seek>(
        reader: &mut Reader<R>,
        ctx: (),
    ) -> Result<Self, DekuError>
    where
        Self: Sized,
    {
        let value = u32::from_reader_with_ctx(reader, ctx)?;
        let (command_id, length) = decode_magic(value)
            .map_err(|_| deku::DekuError::Parse(Cow::from("Invalid command magic")))?;
        let payload = Vec::from_reader_with_ctx(reader, ReadExact(length as usize - MAGIC_SIZE))?;
        Ok(Packet {
            command_id,
            payload,
        })
    }
}

fn encode_magic(command_id: CommandId, length: u16) -> u32 {
    let id: u16 = BUFFER_JUMBO & 0xFFFF | (command_id as u16) & 0xFFFF;
    let length: u32 = (MAX_BUFFER_SIZE as u32) << 16 | length as u32;

    let mut encoded = length;
    encoded = (encoded & 0x3FFF | encoded << 14) & 0xFFFF;
    encoded = ((encoded & 0xF | 0xFF80) << 8 | (length >> 4) & 0xFF | encoded & 0xF000) & 0xFFFF;
    encoded |= (encoded ^ id as u32) << 16;

    encoded
}

fn decode_magic(magic: u32) -> Result<(CommandId, u16), &'static str> {
    let mut length = 0;
    if (magic & 1 << 15) != 0 {
        let section: u16 = (magic & 0x3FFF) as u16;
        length = ((magic as u16 & 0xFF) << 4) | ((section >> 8) & 0xF) | (section & 0xF000);
    }

    let first_two_bytes: u16 = (magic & 0xFFFF) as u16;
    let second_two_bytes: u16 = ((magic >> 16) & 0xFFFF) as u16;
    let xor_result: u16 = first_two_bytes ^ second_two_bytes;
    let command_id =
        unsafe { std::mem::transmute::<_, CommandId>((!(xor_result & 0xC000)) & xor_result) };

    Ok((command_id, length))
}

#[derive(DekuRead, DekuWrite, Debug, PartialEq, Copy, Clone)]
#[repr(u16)]
#[deku(id_type = "u16")]
#[allow(non_camel_case_types)]
pub enum CommandId {
    AcCmdCLRequestLeagueInfo = 0x376,
    AcCmdCLPCInfoLog = 0x46c,
    AcCmdUpdateEnumValueBase_class_AcDataByteListTemplate_struct_TEnumValueChanged_enum_ePlayerConfig_11_796 =
        0x31c,
    AcCmdCLGuildPartyList = 0x3c2,
    AcCmdCLEnterGuildParty = 0x3c4,
    AcCmdCLStartGuildPartyMatch = 0x3d0,
    AcCmdCLStopGuildPartyMatch = 0x3d6,
    AcCmdCLLeaveGuildParty = 0x3cb,
    AcCmdCRRequestGuildMatchInfo = 0x408,
    AcCmdCRRequestGuildRankingInfoList = 0x420,
    AcCmdCLChangeGuildPartyOptions = 0x410,
    AcCmdCLMakeGuildParty = 0x3bc,
    AcCmdCRRequestGuildRankingInfo = 0x41d,
    AcCmdCRWearEquipment = 0x81,
    AcCmdCRPasswordAuth = 0x300,
    AcCmdCRUserPetInfos = 0x3e2,
    AcCmdCRIncubateEgg = 0x39f,
    AcCmdCRBoostIncubateEgg = 0x3a9,
    AcCmdCRBoostIncubateInfoList = 0x3b3,
    AcCmdCRBoostIncubateEggOther = 0x3ae,
    AcCmdCRAcceptBoostIncubateEgg = 0x3b7,
    AcCmdCRPetBornResult = 0x3a4,
    AcCmdCRHousingBuild = 0x25b,
    AcCmdCRUpdatePet = 0x390,
    AcCmdCRRequestPetBirth = 0x39a,
    AcCmdCRUpdateDailyQuest = 0x344,
    AcCmdCRRequestDailyQuestReward = 0x350,
    AcCmdCRRegisterQuest = 0x3e6,
    AcCmdCRGiveupQuest = 0x3ec,
    AcCmdCRRequestQuestReward = 0x3f2,
    AcCmdCRRegisterDailyQuestGroup = 0x33e,
    AcCmdCRChangeAge = 0x45e,
    AcCmdCRHideAge = 0x465,
    AcCmdCRRequestSystemParam = 0x368,
    AcCmdCRRequestLeagueReward = 0x382,
    AcCmdCLInquiryTreecash = 0x2b1,
    AcCmdCRChangeNickname = 0x2f9,
    AcCmdCRUnregisterStallionEstimateInfo = 0x296,
    AcCmdCRUnregisterStallion = 0x14b,
    AcCmdCRPasswordAuthOK = 0x301,
    AcCmdCRPasswordAuthCancel = 0x302,
    AcCmdCLLoginCancel = 0x9,
    AcCmdCLMakeRoomOK = 0x14,
    AcCmdCLMakeRoomCancel = 0x15,
    AcCmdCLEnterRoomOK = 0x1d,
    AcCmdCLEnterRoomCancel = 0x1e,
    AcCmdCLLeaveRoomOK = 0x26,
    AcCmdCLEnterChannelOK = 0x2c,
    AcCmdCLEnterChannelCancel = 0x2d,
    AcCmdCLLeaveChannelOK = 0x2f,
    AcCmdCLDisconnectClientsNotify = 0x170,
    AcCmdCLCreateNicknameNotify = 0x6b,
    AcCmdCLCreateNicknameCancel = 0x6e,
    AcCmdCLShowInventoryCancel = 0x80,
    AcCmdCLUpdateUserSettingsOK = 0x91,
    AcCmdCLUpdateUserSettingsCancel = 0x92,
    AcCmdCLEnterRoomQuickCancel = 0x96,
    AcCmdCLGoodsShopListOK = 0xb3,
    AcCmdCLGoodsShopListCancel = 0xb4,
    AcCmdLCAchievementRewardNotify = 0xee,
    AcCmdCLEnterRanchOK = 0xfd,
    AcCmdCLEnterRanchCancel = 0xfe,
    AcCmdCLLeaveRanchOK = 0x100,
    AcCmdCLLeaveRanchCancel = 0x101,
    AcCmdLCMessengerCommandInvocation = 0xe06,
    AcCmdLCGameguardCheckQuery = 0x122,
    AcCmdLCGameguardEventNotify = 0x124,
    AcCmdCLAchievementCompleteOK = 0x168,
    AcCmdCLAchievementCompleteCancel = 0x169,
    AcCmdCLGetMessengerInfoOK = 0x187,
    AcCmdCLGetMessengerInfoCancel = 0x188,
    AcCmdCLCheckWaitingSeqnoOK = 0x1bc,
    AcCmdCLEnterRoomQuickStopOK = 0x1f2,
    AcCmdCLEnterRoomQuickStopCancel = 0x1f3,
    AcCmdCLRequestFestivalPrizeOK = 0x1fd,
    AcCmdCLRequestFestivalPrizeCancel = 0x1fe,
    AcCmdCLEnterRoomQuickSuccess = 0x204,
    AcCmdCLEnterGuildPartyCancel = 0x3c6,
    AcCmdCLLeaveGuildPartyOK = 0x3cc,
    AcCmdCLLeaveGuildPartyNotify = 0x3cd,
    AcCmdCLStartGuildPartyMatchOK = 0x3d1,
    AcCmdCLStartGuildPartyMatchCancel = 0x3d2,
    AcCmdCLStopGuildPartyMatchOK = 0x3d7,
    AcCmdCLStopGuildPartyMatchCancel = 0x3d8,
    AcCmdLCGuildPartyMatchFound = 0x3dd,
    AcCmdLCGuildMatchAvailable = 0x40f,
    AcCmdCLChangeGuildPartyOptionsCancel = 0x412,
    AcCmdCLQueryServerTimeOK = 0x26b,
    AcCmdLCMissionRecordUpdate = 0x107,
    AcCmdLCOpKick = 0x292,
    AcCmdLCHackShieldRequest = 0x293,
    AcCmdLCHackShieldResult = 0x295,
    AcCmdLCGoodsShopListData = 0x2b0,
    AcCmdCLInquiryTreecashOK = 0x2b2,
    AcCmdCLInquiryTreecashCancel = 0x2b3,
    AcCmdLCAlertGiftbox = 0x29d,
    AcCmdLCPTSPremiumInfo = 0x317,
    AcCmdLCOpMute = 0x33c,
    AcCmdCLRequestLeagueInfoCancel = 0x378,
    AcCmdCLCheckAccountDBAuthOK = 0x193,
    AcCmdCLCheckAccountDBAuthCancel = 0x194,
    AcCmdCLHeartbeat = 0x12,
    AcCmdCLCheckWaitingSeqno = 0x1bb,
    AcCmdCLEnterChannel = 0x2b,
    AcCmdCLLeaveChannel = 0x2e,
    AcCmdCLRoomList = 0x10,
    AcCmdCLLeaveRoom = 0x25,
    AcCmdCLChangeRanchOptionOK = 0x30e,
    AcCmdCLChangeRanchOptionCancel = 0x30f,
    AcCmdCLRequestLeagueInfoOK = 0x377,
    AcCmdCLCreateNickname = 0x6c,
    AcCmdLCNotice = 0x39,
    AcCmdCLEnterGuildPartyNotify = 0x3c7,
    AcCmdCLRequestDailyQuestListOK = 0x357,
    AcCmdCLRequestQuestListOK = 0x3f9,
    AcCmdCLRequestSpecialEventListOK = 0x418,
    AcCmdCLEnterRoom = 0x1c,
    AcCmdCLFeatureCommand = 0x118,
    AcCmdCRAchievementUpdateProperty = 0x16b,
    AcCmdCLLogin = 0x7,
    AcCmdCLAchievementCompleteListOK = 0xe6,
    AcCmdLCUpdateSystemContent = 0x1c1,
    AcCmdLCBreedingNoticeNotify = 0x203,
    AcCmdCLChangeGuildPartyOptionsOK = 0x411,
    AcCmdCLChangeGuildPartyOptionsNotify = 0x413,
    AcCmdLCInviteGuildJoin = 0x2d2,
    AcCmdCLRequestMountInfoOK = 0x276,
    AcCmdCLLoginOK = 0x8,
    AcCmdLCPersonalInfo = 0xec,
    AcCmdLCSkillCardPresetList = 0x235,
    AcCmdCLEnterGuildPartyOK = 0x3c5,
    AcCmdCLRoomListOK = 0x11,
    AcCmdCLShowInventoryOK = 0x7f,
    AcCmdCLRequestFestivalResultOK = 0x166,
    AcCmdCLGuildPartyListOK = 0x3c3,
    AcCmdRCLeaveRoom = 0x30b,
    AcCmdRCAddSkillEffect = 0xa6,
    AcCmdRCMobMove = 0xbe,
    AcCmdCRUpdateRanchLevelNotify = 0x269,
    AcCmdCRRelay = 0x2f7,
    AcCmdCRReadyRaceNotify = 0x59,
    AcCmdCRStartRaceCancel = 0x5c,
    AcCmdCRChangeMasterNotify = 0x5d,
    AcCmdUserRaceTimerOK = 0x1025,
    AcCmdBrokerTest = 0x108e,
    AcCmdUserRaceCountdown = 0x102d,
    AcCmdUserRaceDeleteNotify = 0x1036,
    AcCmdGameRaceItemSpawn = 0x1045,
    AcCmdGameRaceItemGet = 0x1048,
    AcCmdGameQuestItemSpawn = 0x104b,
    AcCmdGameQuestItemGet = 0x104c,
    AcCmdUserRaceFinalNotify = 0x1037,
    AcCmdCREnterRoomCancel = 0x33,
    AcCmdCRLeaveRoomNotify = 0x35,
    AcCmdCRLeaveRoomOK = 0x36,
    AcCmdRCNPCSpawn = 0x4a,
    AcCmdCRAttackNPCNotify = 0x4c,
    AcCmdCRNPCAttachNotify = 0x50,
    AcCmdRCNPCDestroyed = 0x51,
    AcCmdCRKickNotify = 0x5f,
    AcCmdCRChangeTeamOK = 0x8b,
    AcCmdCRChangeTeamCancel = 0x8c,
    AcCmdCRChangeTeamNotify = 0x8d,
    AcCmdCRRequestItemOK = 0x94,
    AcCmdCRRequestMagicItemOK = 0xb6,
    AcCmdCRRequestMagicItemNotify = 0xb7,
    AcCmdRCRagePointNotify = 0x11c,
    AcCmdCRStarPointGetOK = 0x9c,
    AcCmdCRUseItemSlotCancel = 0xa4,
    AcCmdCRUseMagicItemCancel = 0xba,
    AcCmdRCRevengeTargetNotify = 0x120,
    AcCmdRCRemoveSkillEffect = 0xa7,
    AcCmdCRChangeUserSlotOK = 0xab,
    AcCmdCRChangeUserSlotCancel = 0xac,
    AcCmdCRChangeUserSlotNotify = 0xad,
    AcCmdRCAddMonster = 0xae,
    AcCmdRCBindMonster = 0xaf,
    AcCmdCRAttackMonsterNotify = 0x64,
    AcCmdRCTeamSpurGauge = 0xbc,
    AcCmdRCMobTrace = 0xbf,
    AcCmdRCMobLookAt = 0xc0,
    AcCmdRCMobSetScale = 0xc1,
    AcCmdRCMobSetState = 0xc2,
    AcCmdRCMobSetHP = 0xc3,
    AcCmdRCMobDetachPart = 0xc4,
    AcCmdRCMobSetMoveType = 0xc5,
    AcCmdRCMobDead = 0xc6,
    AcCmdRCMobUseSkillToGround = 0xc7,
    AcCmdRCMobUseSkillToObject = 0xc8,
    AcCmdRCMobMovingAttack = 0x11a,
    AcCmdRCMobLead = 0xcb,
    AcCmdRCMobSetHPBySkill = 0xcc,
    AcCmdRCActivateLevelDevice = 0xce,
    AcCmdRCActivateLevelDeviceTrigger = 0xcf,
    AcCmdRCDeactivateLevelDeviceTrigger = 0xd0,
    AcCmdRCMobPlayerDamaged = 0xd3,
    AcCmdRCMobPlayerSkillDamaged = 0xd4,
    AcCmdRCMobEndGame = 0xd5,
    AcCmdCRMobAttackMobNotify = 0xd6,
    AcCmdCRMobSkillToMobNotify = 0xd7,
    AcCmdRCMobPlayerStatus = 0xda,
    AcCmdRCMobPlayerSetHP = 0xdb,
    AcCmdRCMobSetHPMax = 0xdd,
    AcCmdRCMobStop = 0xde,
    AcCmdRCMobResetPos = 0xdf,
    AcCmdRCMissionEvent = 0xe0,
    AcCmdRCLevelDeviceAction = 0xea,
    AcCmdRCCreateItem = 0xe1,
    AcCmdRCMobKnockback = 0xf1,
    AcCmdRCMobSetVelocity = 0xf2,
    AcCmdRCCreateObstacle = 0xf3,
    AcCmdRCMobAttachPart = 0xf4,
    AcCmdRCMobRemoveStatus = 0xf5,
    AcCmdRCMobTargetingOn = 0xf6,
    AcCmdRCMobTargetingOff = 0xf7,
    AcCmdRCMobUnlink = 0xf9,
    AcCmdRCMobGazeAt = 0xfa,
    AcCmdRCMobPlayerSetMP = 0xfb,
    AcCmdRCMobPlayerDead = 0x105,
    AcCmdRCMobRun = 0x108,
    AcCmdRCMobThrust = 0x10c,
    AcCmdRCMobPlayerReflectSkill = 0xd9,
    AcCmdRCMobSetDefaultState = 0x117,
    AcCmdRCAlert = 0x11d,
    AcCmdCRHurdleClearResultOK = 0xe8,
    AcCmdCRRequestSpurOK = 0x9a,
    AcCmdUserRaceCloseWait = 0x1030,
    AcCmdRCAchievementCompleteNotify = 0x17c,
    AcCmdRCKickFromRace = 0x185,
    AcCmdCRAwardEndNotify = 0x1b5,
    AcCmdRCAwardNotify = 0x195,
    AcCmdRCAwardEnd = 0x196,
    AcCmdRCTriggerActivate = 0x1a5,
    AcCmdCRTriggerizeAct = 0x283,
    AcCmdCRLoadingCompleteNotify = 0x1b7,
    AcCmdRCChangeAIOwner = 0x1c7,
    AcCmdRCRoomCountdown = 0x1df,
    AcCmdRCFestivalMissionReport = 0x1fb,
    AcCmdCRRaceResultOK = 0x20a,
    AcCmdCRRaceResultCancel = 0x20b,
    AcCmdRCRoomCountdownCancel = 0x20c,
    AcCmdRCResetPos = 0x215,
    AcCmdRCUpdateGameMoney = 0x234,
    AcCmdCRMountFamilyTreeCancel = 0x21f,
    AcCmdRCGuildModeStar = 0x242,
    AcCmdCRAchievementDetailCancel = 0x246,
    AcCmdCRSetKeyAchievementOK = 0x176,
    AcCmdCRSetKeyAchievementCancel = 0x177,
    AcCmdCRMountInjuryHealOK = 0x24c,
    AcCmdCRMountInjuryHealCancel = 0x24d,
    AcCmdCREmblemListCancel = 0x253,
    AcCmdCRSetKeyEmblemOK = 0x255,
    AcCmdCRSetKeyEmblemCancel = 0x256,
    AcCmdCRSetKeyEmblemNotify = 0x257,
    AcCmdRCAchievementUpdateNotify = 0xe4,
    AcCmdCRCreateGuildOK = 0x2bf,
    AcCmdCRCreateGuildCancel = 0x2c0,
    AcCmdCRWithdrawGuildMemberOK = 0x2c5,
    AcCmdCRWithdrawGuildMemberCancel = 0x2c6,
    AcCmdCRGuildMemberListCancel = 0x2d8,
    AcCmdCRUpdateGuildMemberGradeOK = 0x2dd,
    AcCmdCRUpdateGuildMemberGradeCancel = 0x2de,
    AcCmdCRRequestGuildInfoCancel = 0x2e4,
    AcCmdRCWithdrawGuildMemberNotify = 0x2ee,
    AcCmdRCUpdateGuildMemberGradeNotify = 0x2f0,
    AcCmdRCModifyGuildEmblemNotify = 0x2f4,
    AcCmdCRRelayCommandNotify = 0x2f6,
    AcCmdCRUseItemOK = 0x1e1,
    AcCmdCRUseItemCancel = 0x1e2,
    AcCmdRCMagicExpire = 0x313,
    AcCmdRCMountRentExpire = 0x32b,
    AcCmdCRRegisterDailyQuestGroupOK = 0x33f,
    AcCmdCRRegisterDailyQuestGroupCancel = 0x340,
    AcCmdCRUpdateDailyQuestOK = 0x345,
    AcCmdCRUpdateDailyQuestCancel = 0x346,
    AcCmdCRGiveupDailyQuestOK = 0x34b,
    AcCmdCRGiveupDailyQuestCancel = 0x34c,
    AcCmdRCUpdateDailyQuestNotify = 0x35c,
    AcCmdRCCompleteDailyQuestNotify = 0x35d,
    AcCmdCRRegisterQuestOK = 0x3e7,
    AcCmdCRRegisterQuestCancel = 0x3e8,
    AcCmdCRGiveupQuestOK = 0x3ed,
    AcCmdCRGiveupQuestCancel = 0x3ee,
    AcCmdRCUpdateQuestNotify = 0x3fe,
    AcCmdRCUpdateLeagueScoreNotify = 0x372,
    AcCmdRCUpdateLeagueGradeNotify = 0x375,
    AcCmdCRRequestLeagueTeamListCancel = 0x37e,
    AcCmdRCTimeoutCareUser = 0x393,
    AcCmdRCGameCreateClientItem = 0x398,
    AcCmdRCObtainEgg = 0x39e,
    AcCmdRCGuildRaceInfo = 0x404,
    AcCmdRCGuildRaceResult = 0x406,
    AcCmdCRRequestGuildMatchInfoCancel = 0x40a,
    AcCmdCRRequestGuildRankingInfoCancel = 0x41f,
    AcCmdCRRequestGuildRankingInfoListCancel = 0x422,
    AcCmdRCObstacleStatus = 0x452,
    AcCmdCRChangeAgeOK = 0x45f,
    AcCmdCRChangeAgeCancel = 0x460,
    AcCmdCRHideAgeOK = 0x466,
    AcCmdCRChangeMagicTarget = 0x22c,
    AcCmdCRSkillSystemEvent = 0x23a,
    AcCmdCREnterRoom = 0x30,
    AcCmdUserRaceTimer = 0x1024,
    AcCmdCRHeartbeat = 0x9e,
    AcCmdCRLoadingComplete = 0x1b6,
    AcCmdCRTriggerLevelDevice = 0xcd,
    AcCmdUserRaceItemGet = 0x10a3,
    AcCmdCRNPCAttach = 0x4f,
    AcCmdCRKick = 0x5e,
    AcCmdCRReadyRace = 0x58,
    AcCmdCRChangeMagicTargetOK = 0x22d,
    AcCmdCRChangeMagicTargetCancel = 0x22e,
    AcCmdCRChangeMagicTargetNotify = 0x22f,
    AcCmdRCRemoveMagicTarget = 0x231,
    AcCmdRCSkillSystemEvent = 0x241,
    AcCmdCRAchievementDetailOK = 0x245,
    AcCmdCRRelayNotify = 0x2f8,
    AcCmdRCRequestLeagueWeeklyInfoNotify = 0x38f,
    AcCmdCRUseMagicItemOK = 0xb9,
    AcCmdCRUseMagicItemNotify = 0xbb,
    AcCmdGameRaceClientUDPInfo = 0x109d,
    AcCmdGameRaceP2PResult = 0x109f,
    AcCmdCRUseItemSlotOK = 0xa3,
    AcCmdCRUseItemSlotNotify = 0xa5,
    AcCmdCRInviteGuildJoinCancel = 0x2cc,
    AcCmdRCAcceptGuildJoinNotify = 0x2f2,
    AcCmdCRAttackNPC = 0x4b,
    AcCmdCRStartRace = 0x5a,
    AcCmdServerStatsBase = 0x304,
    AcCmdCRChatNotify = 0x53,
    AcCmdCRWhisperNotify = 0x61,
    AcCmdRCMobAddMob = 0xbd,
    AcCmdRCMobSetKey = 0xc9,
    AcCmdRCMobClearKey = 0xca,
    AcCmdRCUpdateMountInfoNotify = 0x1e7,
    AcCmdCRServerStatsNotify = 0x307,
    AcCmdCRRequestUserOK = 0x35f,
    AcCmdCRRequestUserCancel = 0x360,
    AcCmdRCRequestUser = 0x367,
    AcCmdCRInviteUserOK = 0x36e,
    AcCmdCRInviteUserCancel = 0x36f,
    AcCmdCRChat = 0x52,
    AcCmdCRChangeRoomOptionsNotify = 0x55,
    AcCmdCRUpdateEquipmentNotify = 0x14e,
    AcCmdCROpCmdOK = 0x28f,
    AcCmdRCMobLinkTo = 0xf8,
    AcCmdRCDebugMessage = 0x24a,
    AcCmdCREmblemListOK = 0x252,
    AcCmdRCSupplyItemInsert = 0x286,
    AcCmdCRRequestGuildInfoOK = 0x2e3,
    AcCmdUpdateEnumValueBase_class_AcDataByteListTemplate_struct_TEnumValueChanged_enum_eRaceConfig_5_794 =
        0x31a,
    AcCmdUpdateEnumValueBase_class_AcDataByteListTemplate_struct_TEnumValueChanged_enum_eRaceConfig_5_795 =
        0x31b,
    AcCmdUpdateEnumValueBase_class_AcDataByteListTemplate_struct_TEnumValueChanged_enum_ePlayerConfig_11_797 =
        0x31d,
    AcCmdUpdateEnumValueBase_class_AcDataByteListTemplate_struct_TEnumValueChanged_enum_ePlayerConfig_11_798 =
        0x31e,
    AcCmdRCExchangeItem = 0x397,
    AcCmdRCUpdatePet = 0x392,
    AcCmdCRRequestGuildMatchInfoOK = 0x409,
    AcCmdCRRequestGuildRankingInfoOK = 0x41e,
    AcCmdRCUpdateMountAppearanceNotify = 0x1d3,
    AcCmdRCResetItemWeekly = 0x436,
    AcCmdCRChangeRoomOptions = 0x54,
    AcCmdCREnterRoomNotify = 0x31,
    AcCmdCRStartRaceNotify = 0x5b,
    AcCmdRCUpdateSpecialEventNotify = 0x41c,
    AcCmdCRGuildMemberListOK = 0x2d7,
    AcCmdCRRequestLeagueTeamListOK = 0x37d,
    AcCmdCREnterRoomOK = 0x32,
    AcCmdCRMountFamilyTreeOK = 0x21e,
    AcCmdUpdateEnumValueBase_class_AcDataByteListTemplate_struct_TEnumStringValueChanged_int_20_874 =
        0x36a,
    AcCmdCRUserPetInfosOK = 0x3e5,
    AcCmdCRRequestGuildRankingInfoListOK = 0x421,
    AcCmdRCRaceResultNotify = 0x1c3,
    AcCmdCRMountInjuryPlayEvent = 0x243,
    AcCmdCRRequestStorage = 0x299,
    AcCmdCREmblemList = 0x251,
    AcCmdCRChangeSkillCardPresetID = 0x237,
    AcCmdCRUseItem = 0x1e0,
    AcCmdCRBreedingWishlist = 0x1e8,
    AcCmdCREnterBreedingMarket = 0x13f,
    AcCmdCRBreedingWishlistAdd = 0x1eb,
    AcCmdCRBreedingWishlistDel = 0x1ee,
    AcCmdCRMountFamilyTree = 0x21d,
    AcCmdCRTryBreeding = 0x156,
    AcCmdCRLeaveBreedingMarket = 0x142,
    AcCmdCRBreedingFailureCard = 0x20f,
    AcCmdCRSearchStallion = 0x145,
    AcCmdCRBreedingFailureCardChoose = 0x212,
    AcCmdCRActivateSkillEffect = 0xa8,
    AcCmdCRRequestMagicItem = 0xb5,
    AcCmdCRAwardStart = 0x19d,
    AcCmdCRAwardEnd = 0x17b,
    AcCmdCRRaceResult = 0x69,
    AcCmdUserRaceP2PResult = 0x109e,
    AcCmdCRMobActivateSkillEffect = 0x425,
    AcCmdCRUseMagicItem = 0xb8,
    AcCmdCRStartMagicTarget = 0x232,
    AcCmdCROpCmd = 0x28e,
    AcCmdCRCheckPCBangGiftItem = 0x42d,
    AcCmdCRRequestPCBangGift = 0x427,
    AcCmdCRHousingRepair = 0x262,
    AcCmdCRSetKeyEmblem = 0x254,
    AcCmdCRCheckStorageItem = 0x2b7,
    AcCmdCRPurchaseWithdrawal = 0x2aa,
    AcCmdCRGetItemFromStorage = 0x29e,
    AcCmdCLGoodsShopList = 0xb2,
    AcCmdCROpenRandomBox = 0x43a,
    AcCmdCRGuildMemberList = 0x2d6,
    AcCmdCRRequestGuildInfo = 0x2e2,
    AcCmdCRModifyGuildEmblem = 0x2e5,
    AcCmdCRWithdrawGuildMember = 0x2c4,
    AcCmdCRUpdateGuildMemberGrade = 0x2dc,
    AcCmdCRInviteGuildJoin = 0x2cb,
    AcCmdCRCreateGuild = 0x2be,
    AcCmdLCInviteGuildJoinOK = 0x2d3,
    AcCmdLCInviteGuildJoinCancel = 0x2d4,
    AcCmdCRStudyCareSkill = 0x277,
    AcCmdCRResetCareSkill = 0x27d,
    AcCmdCRChangeSkillCardPreset = 0x236,
    AcCmdCLGetMessengerInfo = 0x186,
    AcCmdCRRequestLeagueTeamList = 0x37c,
    AcCmdCRPerformanceScore = 0x1c8,
    AcCmdCRServerStats = 0x306,
    AcCmdCRLog = 0x11b,
    AcCmdCXSend = 0x11e,
    AcCmdCXCast = 0x11f,
    AcCmdCXEnterXRace = 0x10d,
    AcCmdCRLeaveRanch = 0x12f,
    AcCmdCLShowInventory = 0x7e,
    AcCmdCRExpandMountSlot = 0x26c,
    AcCmdCRRequestNpcDressList = 0x44c,
    AcCmdUserRaceUpdatePos = 0x103f,
    AcCmdUserRaceActivateEvent = 0x10a0,
    AcCmdUserRaceActivateInteractiveEvent = 0x10a1,
    AcCmdUserRaceDeactivateEvent = 0x10a2,
    AcCmdCRTriggerEvent = 0x1a4,
    AcCmdCRRelayCommand = 0x2f5,
    AcCmdCRP2PResult = 0x121,
    AcCmdCRRanchChat = 0x137,
    AcCmdCRRemoveEquipment = 0x84,
    AcCmdCRRevengeAssign = 0x206,
    AcCmdCLEnterRoomQuick = 0x95,
    AcCmdCRLeaveRoom = 0x34,
    AcCmdCLQueryServerTime = 0x26a,
    AcCmdCRRequestUserUid = 0x454,
    AcCmdCLRequestFestivalPrize = 0x1fc,
    AcCmdCRRestartRace = 0x207,
    AcCmdCRConfirmSetItem = 0x2b8,
    AcCmdCRBuyOwnItem = 0x7b,
    AcCmdCRConfirmItem = 0x2ad,
    AcCmdCRUpdateMountInfo = 0x1cb,
    AcCmdCRSendGift = 0x2a4,
    AcCmdCLMakeRoom = 0x13,
    AcCmdCRRecoverMount = 0x17d,
    AcCmdCRMountRentReset = 0x32c,
    AcCmdCRStatusPointApply = 0x153,
    AcCmdCLRequestMountInfo = 0x275,
    AcCmdCRRegisterStallion = 0x148,
    AcCmdCRCheckStallionCharge = 0x1d5,
    AcCmdCRBreedingAbandon = 0x15f,
    AcCmdCRChangeTeam = 0x8a,
    AcCmdCLRequestFestivalResult = 0x165,
    AcCmdCRBreedingTakeMoney = 0x1f4,
    AcCmdCRUpdateMountNickname = 0x197,
    AcCmdCLAchievementCompleteList = 0xe5,
    AcCmdCLUpdateUserSettings = 0x90,
    AcCmdCRUpdateBusyState = 0x1a8,
    AcCmdCREnterRanch = 0x12b,
    AcCmdCLRequestDailyQuestList = 0x356,
    AcCmdCLRequestQuestList = 0x3f8,
    AcCmdCLRequestSpecialEventList = 0x417,
    AcCmdCLEnterRanchRandomly = 0x109,
    AcCmdCLEnterRanch = 0xfc,
    AcCmdCRMountGroupForce = 0x219,
    AcCmdCLChangeRanchOption = 0x30d,
    AcCmdCRKickRanch = 0x45a,
    AcCmdCRRanchSnapshot = 0x139,
    AcCmdCRWearEquipmentOK = 0x82,
    AcCmdRCPetEffect = 0x437,
    AcCmdCRTryBreedingCancel = 0x158,
    AcCmdCREnterRanchCancel = 0x12d,
    AcCmdCRLeaveRanchNotify = 0x132,
    AcCmdCRRanchSnapshotNotify = 0x13a,
    AcCmdCRRanchCmdActionNotify = 0x1ca,
    AcCmdCRUpdateBusyStateNotify = 0x1a9,
    AcCmdCRRanchStuffOK = 0x1b0,
    AcCmdCRLeaveRanchOK = 0x130,
    AcCmdCREnterBreedingMarketCancel = 0x141,
    AcCmdCRSearchStallionCancel = 0x147,
    AcCmdCRRegisterStallionOK = 0x149,
    AcCmdCRRegisterStallionCancel = 0x14a,
    AcCmdCRUnregisterStallionOK = 0x14c,
    AcCmdCRUnregisterStallionCancel = 0x14d,
    AcCmdCRUnregisterStallionEstimateInfoOK = 0x297,
    AcCmdCRUnregisterStallionEstimateInfoCancel = 0x298,
    AcCmdCRBreedingAbandonOK = 0x160,
    AcCmdCRBreedingAbandonCancel = 0x161,
    AcCmdCRBreedingWishlistCancel = 0x1ea,
    AcCmdCRBreedingWishlistAddOK = 0x1ec,
    AcCmdCRBreedingWishlistAddCancel = 0x1ed,
    AcCmdCRBreedingWishlistDelOK = 0x1ef,
    AcCmdCRBreedingWishlistDelCancel = 0x1f0,
    AcCmdCRBreedingTakeMoneyOK = 0x1f5,
    AcCmdCRBreedingTakeMoneyCancel = 0x1f6,
    AcCmdCRCheckStallionChargeOK = 0x1d6,
    AcCmdCRBreedingFailureCardOK = 0x210,
    AcCmdCRBreedingFailureCardCancel = 0x211,
    AcCmdCRBreedingFailureCardChooseCancel = 0x214,
    AcCmdCRBuyOwnItemCancel = 0x7d,
    AcCmdCROpenRandomBoxCancel = 0x43c,
    AcCmdCRWearEquipmentCancel = 0x83,
    AcCmdCRRemoveEquipmentOK = 0x85,
    AcCmdCRRemoveEquipmentCancel = 0x86,
    AcCmdCRUpdateMountInfoCancel = 0x1cd,
    AcCmdCRRecoverMountOK = 0x17e,
    AcCmdCRRecoverMountCancel = 0x17f,
    AcCmdCRStatusPointApplyOK = 0x154,
    AcCmdCRStatusPointApplyCancel = 0x155,
    AcCmdCRUpdateMountNicknameCancel = 0x199,
    AcCmdCRMountGroupForceOK = 0x21a,
    AcCmdCRMountGroupForceCancel = 0x21b,
    AcCmdCRAchievementBookRewardCancel = 0x16e,
    AcCmdCRHousingBuildOK = 0x25c,
    AcCmdCRHousingBuildCancel = 0x25d,
    AcCmdCRHousingBuildNotify = 0x25e,
    AcCmdCRHousingRepairOK = 0x263,
    AcCmdCRHousingRepairCancel = 0x264,
    AcCmdCRHousingRepairNotify = 0x265,
    AcCmdCRExpandMountSlotOK = 0x26d,
    AcCmdCRExpandMountSlotCancel = 0x26e,
    AcCmdCRStudyCareSkillOK = 0x278,
    AcCmdCRStudyCareSkillCancel = 0x279,
    AcCmdCRResetCareSkillOK = 0x27e,
    AcCmdCRResetCareSkillCancel = 0x27f,
    AcCmdCRRequestStorageCancel = 0x29b,
    AcCmdCRGetItemFromStorageCancel = 0x2a0,
    AcCmdCRSendGiftCancel = 0x2a6,
    AcCmdCRPurchaseWithdrawalOK = 0x2ab,
    AcCmdCRPurchaseWithdrawalCancel = 0x2ac,
    AcCmdCRConfirmSetItemOK = 0x2b9,
    AcCmdCRConfirmSetItemCancel = 0x2ba,
    AcCmdCRModifyGuildEmblemCancel = 0x2e7,
    AcCmdCRChangeNicknameCancel = 0x2fb,
    AcCmdCRMountRentInfoOK = 0x323,
    AcCmdCRMountRentInfoCancel = 0x324,
    AcCmdCRMountRentCancel = 0x327,
    AcCmdCRMountRentResetOK = 0x32d,
    AcCmdCRMountRentResetCancel = 0x32e,
    AcCmdCRMountRentResetNotify = 0x32f,
    AcCmdCRRequestDailyQuestRewardCancel = 0x352,
    AcCmdCRRequestQuestRewardCancel = 0x3f4,
    AcCmdCRRequestLeagueRewardCancel = 0x384,
    AcCmdCRIncubateEggOK = 0x3a0,
    AcCmdCRIncubateEggNotify = 0x3a2,
    AcCmdCRBoostIncubateEggCancel = 0x3ab,
    AcCmdCRBoostIncubateEggNotify = 0x3ac,
    AcCmdCRBoostIncubateEggOtherCancel = 0x3b0,
    AcCmdCRBoostIncubateEggOtherNotify = 0x3b1,
    AcCmdCRAcceptBoostIncubateEggOK = 0x3b8,
    AcCmdCRAcceptBoostIncubateEggCancel = 0x3b9,
    AcCmdCRAcceptBoostIncubateEggNotify = 0x3ba,
    AcCmdCRRequestPCBangGiftCancel = 0x429,
    AcCmdCRCheckPCBangGiftItemOK = 0x42e,
    AcCmdCRCheckPCBangGiftItemCancel = 0x42f,
    AcCmdCRRideMountNotify = 0x449,
    AcCmdCRRequestNpcDressListCancel = 0x44e,
    AcCmdCRKickRanchOK = 0x45b,
    AcCmdCRKickRanchCancel = 0x45c,
    AcCmdRCKickRanchNotify = 0x45d,
    AcCmdRCChangeAgeNotify = 0x464,
    AcCmdRCHideAgeNotify = 0x46b,
    AcCmdCRMountRent = 0x325,
    AcCmdCRSendGiftOK = 0x2a5,
    AcCmdCRMountRentOK = 0x326,
    AcCmdCRMountRentNotify = 0x32a,
    AcCmdCRPetBornResultNotify = 0x3a5,
    AcCmdCRIncubateEggCancel = 0x3a1,
    AcCmdCRRideGrazeMountNotify = 0x44b,
    AcCmdCRTryBreedingOK = 0x157,
    AcCmdCRAchievementBookRewardOK = 0x16d,
    AcCmdCRModifyGuildEmblemOK = 0x2e6,
    AcCmdCRBoostIncubateEggOK = 0x3aa,
    AcCmdCRBoostIncubateEggOtherOK = 0x3af,
    AcCmdCRUpdateMountNicknameOK = 0x198,
    AcCmdCRConfirmItemOK = 0x2ae,
    AcCmdCRConfirmItemCancel = 0x2af,
    AcCmdCRChangeNicknameOK = 0x2fa,
    AcCmdCRRequestUserUidOK = 0x455,
    AcCmdCRRequestUserUidCancel = 0x456,
    AcCmdCRUpdateMountInfoOK = 0x1cc,
    AcCmdRCSetIntroductionNotify = 0x174,
    AcCmdCRRanchChatNotify = 0x138,
    AcCmdRCAddIdleMountInfoNotify = 0x1e6,
    AcCmdCRBreedingFailureCardChooseOK = 0x213,
    AcCmdCRBuyOwnItemOK = 0x7c,
    AcCmdCROpenRandomBoxOK = 0x43b,
    AcCmdUpdateEnumValueBase_class_AcDataByteListTemplate_struct_TEnumValueChanged_enum_eRanchConfig_1_800 =
        0x320,
    AcCmdUpdateEnumValueBase_class_AcDataByteListTemplate_struct_TEnumValueChanged_enum_eRanchConfig_1_801 =
        0x321,
    AcCmdCRRequestPetBirthOK = 0x39b,
    AcCmdCRRequestPetBirthCancel = 0x39c,
    AcCmdCRRequestPetBirthNotify = 0x39d,
    AcCmdCRRequestNpcDressListOK = 0x44d,
    AcCmdCREnterRanchNotify = 0x12e,
    AcCmdCREnterBreedingMarketOK = 0x140,
    AcCmdRCUpdatePetCancel = 0x439,
    AcCmdCRGetItemFromStorageOK = 0x29f,
    AcCmdCRRequestDailyQuestRewardOK = 0x351,
    AcCmdCRRequestQuestRewardOK = 0x3f3,
    AcCmdCRRequestLeagueRewardOK = 0x383,
    AcCmdCRRequestPCBangGiftOK = 0x428,
    AcCmdCRSearchStallionOK = 0x146,
    AcCmdCRBreedingWishlistOK = 0x1e9,
    AcCmdCREnterRanchOK = 0x12c,
    AcCmdCRRequestStorageOK = 0x29a,
    AcCmdCRBoostIncubateInfoListOK = 0x3b6,
    AcCmdCLSetIntroduction = 0x171,
    AcCmdCLRequestPersonalInfo = 0xeb,
    AcCmdCRSetKeyAchievement = 0x175,
    AcCmdCRAchievementDetail = 0x244,
    AcCmdCRAchievementBookReward = 0x16c,
    AcCmdCLUpdateSystemContent = 0x1bd,
    AcCmdUpdateEnumValueBase_class_AcDataByteListTemplate_struct_TEnumValueChanged_enum_eRaceConfig_5_793 =
        0x319,
    AcCmdUpdateEnumValueBase_class_AcDataByteListTemplate_struct_TEnumValueChanged_enum_eRanchConfig_1_799 =
        0x31f,
    AcCmdUpdateEnumValueBase_class_AcDataByteListTemplate_struct_TEnumStringValueChanged_int_20_873 =
        0x369,
    AcCmdCLClientNotify = 0x309,
    AcCmdCRRequestSpur = 0x99,
    AcCmdCRStartingRate = 0xb0,
    AcCmdCRStarPointGet = 0x9b,
    AcCmdCRHurdleClearResult = 0xe7,
    AcCmdCRMountRentInfo = 0x322,
    AcCmdCRRanchStuff = 0x1af,
    AcCmdCRRequestUser = 0x35e,
    AcCmdCRInviteUser = 0x36d,
    AcCmdCRRanchCmdAction = 0x1c9,
    AcCmdCRRanchCmdActionTo = 0x453,
    AcCmdCRGameCreateClientItem = 0x399,
    AcCmdCRRanchStuffStart = 0x20d,
    AcCmdCRRanchStuffEnd = 0x20e,
    AcCmdCRMountInjuryHeal = 0x24b,
    AcCmdCRMobKnockback = 0x424,
    AcCmdCRMobSkillToMob = 0xd2,
    AcCmdCRMobSkillToMobHit = 0xd8,
    AcCmdCRMobPlayerReflectSkill = 0x112,
    AcCmdCLEnterRoomQuickStop = 0x1f1,
}

#[cfg(test)]
mod tests {
    use pretty_hex::pretty_hex;

    use crate::commands::{
        Command,
        lobby::login::{Login, LoginCancel, LoginOk},
    };

    use super::*;

    #[test]
    fn test_packet_deserialization() {
        let mut cursor = Cursor::new(AO_STREAM_DUMP);
        let mut reader = Reader::new(&mut cursor);
        loop {
            let result = Packet::from_reader_with_ctx(&mut reader, ());
            if let Ok(packet) = result {
                // We don't use the packet scrambler since this capture's data is from a server without encryption.
                match packet.command_id {
                    CommandId::AcCmdCLLogin => println!(
                        "Read Command {:?}:\n{:#?}\n",
                        packet.command_id,
                        Login::try_from(&packet).unwrap()
                    ),
                    CommandId::AcCmdCLLoginCancel => println!(
                        "Read Command {:?}:\n{:#?}\n",
                        packet.command_id,
                        LoginCancel::try_from(&packet).unwrap()
                    ),
                    CommandId::AcCmdCLLoginOK => println!(
                        "Read Command {:?}:\n{:#?}\n",
                        packet.command_id,
                        LoginOk::try_from(&packet).unwrap()
                    ),
                    _ => println!(
                        "Read Command {:?}:\n\t{}\n{:?}\n",
                        packet.command_id,
                        pretty_hex(&packet.payload),
                        &packet.payload
                    ),
                };
            } else {
                println!("Failed to read command: {:?}", result);
                break;
            }
        }
        assert_eq!(
            cursor.position() as usize,
            AO_STREAM_DUMP.len(),
            "Did not read the entire stream dump"
        );
    }

    const AO_STREAM_DUMP: [u8; 2036] = [
        0x2d, 0xc7, 0x25, 0xc7, 0xc2, 0x08, 0x40, 0xa7, 0xf2, 0xb7, 0xda, 0x01, 0x94, 0xa7, 0x0c,
        0x00, 0xe8, 0xe2, 0x06, 0x00, 0x72, 0x67, 0x6e, 0x74, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x0a, 0x00, 0xb1, 0x8d, 0x00, 0x00, 0x30, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x19, 0x00, 0x00, 0x00, 0x0c, 0x01, 0x00, 0x16, 0x57, 0x02, 0x00, 0x15, 0x41, 0x03, 0x00,
        0x17, 0x44, 0x04, 0x00, 0x18, 0x53, 0x05, 0x00, 0x12, 0x13, 0x06, 0x00, 0x82, 0x83, 0x07,
        0x00, 0x20, 0x2f, 0x08, 0x00, 0x46, 0x00, 0x09, 0x00, 0x52, 0x00, 0x0a, 0x00, 0x19, 0x00,
        0x0b, 0x00, 0x0f, 0x00, 0x0c, 0x00, 0x43, 0x00, 0x2f, 0x77, 0x69, 0x6e, 0x6b, 0x2f, 0x77,
        0x61, 0x76, 0x65, 0x00, 0x54, 0x68, 0x61, 0x6e, 0x6b, 0x20, 0x79, 0x6f, 0x75, 0x21, 0x20,
        0x2f, 0x68, 0x65, 0x61, 0x72, 0x74, 0x00, 0x2f, 0x66, 0x69, 0x72, 0x65, 0x2f, 0x66, 0x69,
        0x72, 0x65, 0x2f, 0x66, 0x69, 0x72, 0x65, 0x20, 0x46, 0x69, 0x72, 0x65, 0x21, 0x20, 0x2f,
        0x66, 0x69, 0x72, 0x65, 0x2f, 0x66, 0x69, 0x72, 0x65, 0x2f, 0x66, 0x69, 0x72, 0x65, 0x00,
        0x2f, 0x73, 0x61, 0x64, 0x2f, 0x63, 0x72, 0x79, 0x20, 0x53, 0x6f, 0x72, 0x72, 0x79, 0x21,
        0x20, 0x2f, 0x63, 0x72, 0x79, 0x2f, 0x73, 0x61, 0x64, 0x00, 0x2f, 0x2d, 0x74, 0x61, 0x64,
        0x61, 0x20, 0x43, 0x6f, 0x6e, 0x67, 0x72, 0x61, 0x74, 0x75, 0x6c, 0x61, 0x74, 0x69, 0x6f,
        0x6e, 0x73, 0x21, 0x21, 0x21, 0x20, 0x2f, 0x74, 0x61, 0x64, 0x61, 0x00, 0x2f, 0x63, 0x6c,
        0x61, 0x70, 0x20, 0x47, 0x6f, 0x6f, 0x64, 0x20, 0x47, 0x61, 0x6d, 0x65, 0x21, 0x20, 0x2f,
        0x2d, 0x63, 0x6c, 0x61, 0x70, 0x00, 0x42, 0x65, 0x20, 0x72, 0x69, 0x67, 0x68, 0x74, 0x20,
        0x62, 0x61, 0x63, 0x6b, 0x21, 0x20, 0x50, 0x6c, 0x65, 0x61, 0x73, 0x65, 0x20, 0x77, 0x61,
        0x69, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x6d, 0x65, 0x21, 0x20, 0x2f, 0x77, 0x69, 0x6e,
        0x6b, 0x00, 0x53, 0x65, 0x65, 0x20, 0x79, 0x6f, 0x75, 0x21, 0x20, 0x2f, 0x73, 0x6d, 0x69,
        0x6c, 0x65, 0x2f, 0x77, 0x61, 0x76, 0x65, 0x00, 0x64, 0x00, 0x00, 0x00, 0x10, 0x00, 0x07,
        0x18, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x01, 0x02,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x23, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x01,
        0x00, 0x00, 0x00, 0x29, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2a,
        0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x01, 0x02, 0x00,
        0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x01, 0x02, 0x00, 0x00, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x00, 0x6d, 0xc9, 0xd7, 0x15, 0x39, 0x89, 0x90, 0x85, 0x0c, 0x11, 0x0a, 0x00,
        0x00, 0x01, 0x01, 0x00, 0x04, 0x00, 0x08, 0x00, 0x08, 0x00, 0x08, 0x00, 0x00, 0x00, 0x96,
        0xa3, 0x79, 0x05, 0x21, 0x4e, 0x00, 0x00, 0x69, 0x64, 0x6f, 0x6e, 0x74, 0x75, 0x6e, 0x64,
        0x65, 0x72, 0x73, 0x74, 0x61, 0x6e, 0x64, 0x00, 0x02, 0x03, 0x03, 0x03, 0x04, 0x04, 0x05,
        0x03, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x15, 0x01, 0x02, 0x02,
        0x00, 0xd0, 0x07, 0x3c, 0x00, 0x1c, 0x02, 0x00, 0x00, 0xe8, 0x03, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0xe8, 0x03, 0x1e, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0xe4, 0x67, 0xa1, 0xb8, 0x02, 0x00, 0x7d, 0x2e, 0x03, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01,
        0x00, 0xfe, 0x01, 0x00, 0x00, 0x21, 0x04, 0x00, 0x00, 0xf8, 0x05, 0x00, 0x00, 0xa4, 0xcf,
        0x00, 0x00, 0xe4, 0x67, 0xa1, 0xb8, 0x00, 0x00, 0x00, 0x00, 0x0a, 0x06, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00,
        0x00, 0x02, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x30, 0x75, 0x00, 0x00, 0x35,
        0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00,
        0x43, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x45, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x06, 0x0e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x04, 0x2b, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xdb, 0x87, 0x1b, 0xca, 0x00, 0x00,
        0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04,
        0x96, 0xa3, 0x79, 0x05, 0x12, 0x00, 0x00, 0x00, 0xe4, 0x67, 0x6e, 0x01, 0x3a, 0x00, 0x00,
        0x00, 0x8e, 0x03, 0x00, 0x00, 0xc6, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xcf, 0x36, 0xcd, 0x00, 0x00, 0x04, 0x00,
        0x01, 0x00, 0x00, 0x00, 0x02, 0x29, 0x00, 0x00, 0x00, 0x17, 0x00, 0x00, 0x00, 0x01, 0x01,
        0x00, 0x00, 0x00, 0x02, 0x2a, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00,
        0x00, 0x00, 0x02, 0x37, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00, 0x01, 0x02, 0x00, 0x00,
        0x00, 0x02, 0x37, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x8e, 0x87, 0x8f, 0x03,
        0xbb, 0x2d, 0xd6, 0x88, 0xf3, 0x51, 0xee, 0x68, 0x42, 0x00, 0x8e, 0x17, 0x8d, 0x01, 0x70,
        0x17, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x88, 0xb2, 0x8a, 0x00, 0x00, 0x00,
        0x00, 0x1f, 0x86, 0x60, 0x86, 0x1f, 0x4a, 0x75, 0x00, 0x02, 0x4a, 0x75, 0x00, 0x00, 0xb8,
        0x1b, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0xb0, 0x9a, 0x00, 0x02, 0xb0, 0x9a, 0x00, 0x00,
        0xb8, 0x1b, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x14, 0x9b, 0x00, 0x02, 0x14, 0x9b, 0x00,
        0x00, 0xb8, 0x1b, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x78, 0x9b, 0x00, 0x02, 0x78, 0x9b,
        0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x79, 0x9b, 0x00, 0x02, 0x79,
        0x9b, 0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7a, 0x9b, 0x00, 0x02,
        0x7a, 0x9b, 0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7b, 0x9b, 0x00,
        0x02, 0x7b, 0x9b, 0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7c, 0x9b,
        0x00, 0x02, 0x7c, 0x9b, 0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x7d,
        0x9b, 0x00, 0x02, 0x7d, 0x9b, 0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x7e, 0x9b, 0x00, 0x02, 0x7e, 0x9b, 0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00, 0x01, 0x00, 0x00,
        0x00, 0x7f, 0x9b, 0x00, 0x02, 0x7f, 0x9b, 0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00, 0x01, 0x00,
        0x00, 0x00, 0x80, 0x9b, 0x00, 0x02, 0x80, 0x9b, 0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00, 0x01,
        0x00, 0x00, 0x00, 0x81, 0x9b, 0x00, 0x02, 0x81, 0x9b, 0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00,
        0x01, 0x00, 0x00, 0x00, 0xe6, 0x9b, 0x00, 0x02, 0xe6, 0x9b, 0x00, 0x00, 0xb8, 0x1b, 0x01,
        0x00, 0x01, 0x00, 0x00, 0x00, 0xe7, 0x9b, 0x00, 0x02, 0xe7, 0x9b, 0x00, 0x00, 0xb8, 0x1b,
        0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0xe8, 0x9b, 0x00, 0x02, 0xe8, 0x9b, 0x00, 0x00, 0xb8,
        0x1b, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0xe9, 0x9b, 0x00, 0x02, 0xe9, 0x9b, 0x00, 0x00,
        0xb8, 0x1b, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00, 0x42, 0x9c, 0x00, 0x02, 0x42, 0x9c, 0x00,
        0x00, 0xb8, 0x1b, 0x01, 0x00, 0x06, 0x00, 0x00, 0x00, 0x29, 0xa0, 0x00, 0x02, 0x29, 0xa0,
        0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x2a, 0xa0, 0x00, 0x02, 0x2a,
        0xa0, 0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x2b, 0xa0, 0x00, 0x02,
        0x2b, 0xa0, 0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00, 0x10, 0x00, 0x00, 0x00, 0x2c, 0xa0, 0x00,
        0x02, 0x2c, 0xa0, 0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x2e, 0xa0,
        0x00, 0x02, 0x2e, 0xa0, 0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00, 0x21, 0x00, 0x00, 0x00, 0x2f,
        0xa0, 0x00, 0x02, 0x2f, 0xa0, 0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00, 0x0a, 0x00, 0x00, 0x00,
        0x30, 0xa0, 0x00, 0x02, 0x30, 0xa0, 0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00, 0x08, 0x00, 0x00,
        0x00, 0x31, 0xa0, 0x00, 0x02, 0x31, 0xa0, 0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00, 0x06, 0x00,
        0x00, 0x00, 0x11, 0xa4, 0x00, 0x02, 0x11, 0xa4, 0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00, 0x18,
        0x00, 0x00, 0x00, 0xe1, 0xab, 0x00, 0x02, 0xe1, 0xab, 0x00, 0x00, 0xb8, 0x1b, 0x01, 0x00,
        0x05, 0x00, 0x00, 0x00, 0xe5, 0xab, 0x00, 0x02, 0xe5, 0xab, 0x00, 0x00, 0xb8, 0x1b, 0x01,
        0x00, 0x03, 0x00, 0x00, 0x00, 0xc9, 0xaf, 0x00, 0x02, 0xc9, 0xaf, 0x00, 0x00, 0xb8, 0x1b,
        0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x94, 0x5f, 0x01, 0x02, 0x94, 0x5f, 0x01, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x02, 0xc1, 0x75, 0xc2, 0x12, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x12, 0x01, 0x01, 0x01, 0x00, 0x00, 0x34, 0x01, 0x00, 0x00, 0x8c, 0x57, 0x8f,
        0xe8, 0xe2, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1a, 0xcd, 0xfc, 0xcd, 0xe8, 0xe2, 0x06,
        0x00, 0x1c, 0x00, 0x28, 0x4e, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x29, 0x4e, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a,
        0x4e, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2b, 0x4e, 0x00,
        0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2c, 0x4e, 0x00, 0x00, 0x00,
        0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xab, 0x27, 0x00, 0x00, 0x00, 0x00, 0x01,
        0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xac, 0x27, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00,
        0x00, 0x00, 0x00, 0x00, 0xad, 0x27, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00,
        0x00, 0x00, 0xae, 0x27, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf4, 0x01, 0x00, 0x00, 0x00, 0x00,
        0xaf, 0x27, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0x27,
        0x00, 0x00, 0x00, 0x00, 0x01, 0x05, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb1, 0x27, 0x00, 0x00,
        0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb2, 0x27, 0x00, 0x00, 0x00, 0x00,
        0x01, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb3, 0x27, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01,
        0x00, 0x00, 0x00, 0x00, 0x00, 0xb4, 0x27, 0x00, 0x00, 0x00, 0x00, 0x01, 0xf4, 0x01, 0x00,
        0x00, 0x00, 0x00, 0xb5, 0x27, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00,
        0x00, 0xb6, 0x27, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0xb7,
        0x27, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0x27, 0x00,
        0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb9, 0x27, 0x00, 0x00, 0x00,
        0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xba, 0x27, 0x00, 0x00, 0x00, 0x00, 0x01,
        0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbb, 0x27, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00,
        0x00, 0x00, 0x00, 0x00, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00,
        0x00, 0x00, 0xbd, 0x27, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00,
        0xbe, 0x27, 0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbf, 0x27,
        0x00, 0x00, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x27, 0x00, 0x00,
        0x00, 0x00, 0xff, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0xc1, 0x27, 0x00, 0x00, 0x00, 0x00,
        0x01, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02,
        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
        0x00, 0x00, 0x01, 0x82, 0xfc, 0x82, 0xe8, 0xe2, 0x06, 0x00, 0x44, 0x33, 0x22, 0x11, 0x90,
        0x4c, 0x75, 0x92, 0xde, 0x32, 0x0c, 0xcd, 0xf5, 0xce, 0xe8, 0xe2, 0x06, 0x00, 0x0f, 0x00,
        0x16, 0x2b, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00, 0x03, 0x17, 0x2b,
        0x00, 0x00, 0x00, 0x00, 0x03, 0x06, 0x00, 0x00, 0x00, 0x00, 0x03, 0x18, 0x2b, 0x00, 0x00,
        0x00, 0x00, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x03, 0x1b, 0x2b, 0x00, 0x00, 0x00, 0x00,
        0x03, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x03, 0x1c, 0x2b, 0x00, 0x00, 0x00, 0x00, 0x03, 0x1f,
        0x00, 0x00, 0x00, 0x00, 0x03, 0x1f, 0x2b, 0x00, 0x00, 0x00, 0x00, 0x01, 0x0a, 0x00, 0x00,
        0x00, 0x00, 0x03, 0xea, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x03, 0x01, 0x00, 0x00, 0x00, 0x00,
        0x03, 0xeb, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x03, 0xec,
        0x2e, 0x00, 0x00, 0x00, 0x00, 0x01, 0x03, 0x00, 0x00, 0x00, 0x00, 0x03, 0xd2, 0x32, 0x00,
        0x00, 0x00, 0x00, 0x01, 0x14, 0x00, 0x00, 0x00, 0x00, 0x03, 0xba, 0x36, 0x00, 0x00, 0x00,
        0x00, 0x03, 0x02, 0x00, 0x00, 0x00, 0x00, 0x03, 0xbb, 0x36, 0x00, 0x00, 0x00, 0x00, 0x03,
        0x03, 0x00, 0x00, 0x00, 0x00, 0x03, 0xbc, 0x36, 0x00, 0x00, 0x00, 0x00, 0x03, 0x04, 0x00,
        0x00, 0x00, 0x00, 0x03, 0xbd, 0x36, 0x00, 0x00, 0x00, 0x00, 0x03, 0x04, 0x00, 0x00, 0x00,
        0x00, 0x03, 0xc1, 0x36, 0x00, 0x00, 0x00, 0x00, 0x03, 0x06, 0x00, 0x00, 0x00, 0x00, 0x03,
        0x00, 0xcb, 0x0e, 0xc8, 0xe8, 0xe2, 0x06, 0x00, 0x01, 0x00, 0x00,
    ];
}
